//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    vector<int> satisfyEqn(int arr[], int n) {
        // code here
        vector<int> ans{INT_MAX , INT_MAX ,INT_MAX,INT_MAX } ;
        unordered_map<int,pair<int,int> >m ; 
        bool found = false ;
        for(int i =0 ; i< n ; i++){
            for(int j=i+1 ; j<n ; j++){
                int sum = arr[i] + arr[j] ;
                if(m.find(sum) == m.end()){
                    m[sum] = {i,j} ;
                }else{
                    //agar wesa same sum already present hai map mai 
                   pair<int,int> x = m[sum];
                   if( i != x.first && i!=x.second && j!=x.first && j!=x.second){
                       found = true ;
                       vector<int> curr = {x.first , x.second , i, j} ;
                       if(curr < ans) ans = curr ;
                   }
                }
            }
        }
        vector<int> notans = {-1,-1,-1,-1} ;
        return found ? ans:vector<int>{-1,-1,-1,-1} ;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        
        cin>>N;
        int A[N];
        
        for(int i=0; i<N; i++)
            cin>>A[i];

        Solution ob;
        vector<int> ptr = ob.satisfyEqn(A,N);
        
        cout<<ptr[0]<<" "<<ptr[1]<<" "<<ptr[2]<<" "<<ptr[3]<<endl;
    }
    return 0;
}
// } Driver Code Ends
